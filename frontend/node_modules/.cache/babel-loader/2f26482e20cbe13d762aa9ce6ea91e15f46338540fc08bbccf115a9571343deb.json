{"ast":null,"code":"// Theme validation utility for development and debugging\nexport const validateThemeConsistency = () => {\n  const issues = [];\n  const warnings = [];\n  const suggestions = [];\n\n  // Check for hardcoded colors in style attributes\n  const elementsWithHardcodedColors = document.querySelectorAll('[style*=\"color:\"], [style*=\"background:\"], [style*=\"border-color:\"]');\n  if (elementsWithHardcodedColors.length > 0) {\n    issues.push(`Found ${elementsWithHardcodedColors.length} elements with hardcoded colors in style attributes`);\n\n    // Log specific elements for debugging\n    elementsWithHardcodedColors.forEach((el, index) => {\n      if (index < 5) {\n        // Limit to first 5 for readability\n        console.warn(`Hardcoded color element ${index + 1}:`, el);\n      }\n    });\n  }\n\n  // Check for missing CSS variables\n  const requiredVariables = [\"--nexus-bg-primary\", \"--nexus-bg-secondary\", \"--nexus-bg-tertiary\", \"--nexus-text-primary\", \"--nexus-text-secondary\", \"--nexus-border\", \"--nexus-primary\", \"--nexus-secondary\", \"--nexus-shadow\"];\n  const rootStyles = getComputedStyle(document.documentElement);\n  const missingVariables = [];\n  requiredVariables.forEach(variable => {\n    const value = rootStyles.getPropertyValue(variable);\n    if (!value || value.trim() === \"\") {\n      missingVariables.push(variable);\n    }\n  });\n  if (missingVariables.length > 0) {\n    issues.push(`Missing CSS variables: ${missingVariables.join(\", \")}`);\n  }\n\n  // Check Bootstrap theme attribute\n  const themeAttribute = document.documentElement.getAttribute(\"data-bs-theme\");\n  if (!themeAttribute) {\n    issues.push(\"Missing data-bs-theme attribute on document element\");\n  } else if (![\"light\", \"dark\"].includes(themeAttribute)) {\n    issues.push(`Invalid theme attribute value: ${themeAttribute}`);\n  }\n\n  // Check for elements that might not be themed properly\n  const commonElements = {\n    cards: document.querySelectorAll(\".card\"),\n    buttons: document.querySelectorAll(\".btn\"),\n    forms: document.querySelectorAll(\".form-control\"),\n    modals: document.querySelectorAll(\".modal-content\"),\n    navbars: document.querySelectorAll(\".navbar\"),\n    footers: document.querySelectorAll(\"footer\")\n  };\n  Object.entries(commonElements).forEach(([elementType, elements]) => {\n    if (elements.length === 0) {\n      warnings.push(`No ${elementType} found on current page`);\n    } else {\n      suggestions.push(`${elements.length} ${elementType} detected and should be themed`);\n    }\n  });\n\n  // Check for potential CSS conflicts\n  const conflictingClasses = document.querySelectorAll(\".bg-white, .bg-dark, .text-white, .text-dark\");\n  if (conflictingClasses.length > 0) {\n    warnings.push(`Found ${conflictingClasses.length} elements with potential Bootstrap color conflicts`);\n  }\n\n  // Check transition performance\n  const elementsWithTransitions = document.querySelectorAll('[style*=\"transition\"], .card, .btn, .navbar-custom');\n  if (elementsWithTransitions.length > 100) {\n    warnings.push(`High number of elements with transitions (${elementsWithTransitions.length}) may impact performance`);\n  }\n\n  // Check for accessibility\n  const focusableElements = document.querySelectorAll(\"button, input, select, textarea, a[href]\");\n  let elementsWithoutFocusStyles = 0;\n  focusableElements.forEach(el => {\n    const styles = getComputedStyle(el);\n    if (!styles.getPropertyValue(\"outline\") && !styles.getPropertyValue(\"box-shadow\")) {\n      elementsWithoutFocusStyles++;\n    }\n  });\n  if (elementsWithoutFocusStyles > 0) {\n    warnings.push(`${elementsWithoutFocusStyles} focusable elements may lack proper focus indicators`);\n  }\n\n  // Generate report\n  const report = {\n    timestamp: new Date().toISOString(),\n    theme: themeAttribute,\n    issues: issues,\n    warnings: warnings,\n    suggestions: suggestions,\n    summary: {\n      totalIssues: issues.length,\n      totalWarnings: warnings.length,\n      overallStatus: issues.length === 0 ? \"PASS\" : \"FAIL\"\n    }\n  };\n\n  // Console output\n  if (report.summary.overallStatus === \"PASS\") {\n    console.log(\"✅ Theme validation PASSED - all components properly themed\");\n    if (warnings.length > 0) {\n      console.warn(\"⚠️ Warnings found:\", warnings);\n    }\n    if (suggestions.length > 0) {\n      console.info(\"💡 Suggestions:\", suggestions);\n    }\n  } else {\n    console.error(\"❌ Theme validation FAILED\");\n    console.error(\"🐛 Issues found:\", issues);\n    if (warnings.length > 0) {\n      console.warn(\"⚠️ Additional warnings:\", warnings);\n    }\n  }\n\n  // Store validation results for debugging\n  if (typeof window !== \"undefined\") {\n    window.themeValidationReport = report;\n    sessionStorage.setItem(\"themeValidationReport\", JSON.stringify(report));\n  }\n  return report;\n};\n\n// Performance monitoring for theme switches\nexport const measureThemePerformance = callback => {\n  const startTime = performance.now();\n  const observer = new MutationObserver(mutations => {\n    const endTime = performance.now();\n    const duration = endTime - startTime;\n    console.log(`🔄 Theme switch performance: ${duration.toFixed(2)}ms`);\n    if (duration > 100) {\n      console.warn(\"⚠️ Theme switch took longer than expected (>100ms)\");\n    }\n    observer.disconnect();\n    if (callback) callback(duration);\n  });\n  observer.observe(document.documentElement, {\n    attributes: true,\n    attributeFilter: [\"data-bs-theme\"]\n  });\n  return observer;\n};\n\n// Utility to check contrast ratios (accessibility)\nexport const checkContrastRatio = (foreground, background) => {\n  // Convert hex to RGB\n  const hexToRgb = hex => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    } : null;\n  };\n\n  // Calculate relative luminance\n  const getLuminance = rgb => {\n    const {\n      r,\n      g,\n      b\n    } = rgb;\n    const [rs, gs, bs] = [r, g, b].map(c => {\n      c = c / 255;\n      return c <= 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n    });\n    return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;\n  };\n  const fg = hexToRgb(foreground);\n  const bg = hexToRgb(background);\n  if (!fg || !bg) return null;\n  const l1 = getLuminance(fg);\n  const l2 = getLuminance(bg);\n  const ratio = (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05);\n  return {\n    ratio: ratio,\n    aa: ratio >= 4.5,\n    aaa: ratio >= 7,\n    level: ratio >= 7 ? \"AAA\" : ratio >= 4.5 ? \"AA\" : \"FAIL\"\n  };\n};\n\n// Development helper functions\nif (process.env.NODE_ENV === \"development\") {\n  // Make functions available globally for debugging\n  window.validateTheme = validateThemeConsistency;\n  window.measureThemePerformance = measureThemePerformance;\n  window.checkContrastRatio = checkContrastRatio;\n\n  // Auto-validate on theme changes\n  const observer = new MutationObserver(mutations => {\n    mutations.forEach(mutation => {\n      if (mutation.type === \"attributes\" && mutation.attributeName === \"data-bs-theme\") {\n        setTimeout(() => {\n          validateThemeConsistency();\n        }, 100);\n      }\n    });\n  });\n  observer.observe(document.documentElement, {\n    attributes: true,\n    attributeFilter: [\"data-bs-theme\"]\n  });\n}","map":{"version":3,"names":["validateThemeConsistency","issues","warnings","suggestions","elementsWithHardcodedColors","document","querySelectorAll","length","push","forEach","el","index","console","warn","requiredVariables","rootStyles","getComputedStyle","documentElement","missingVariables","variable","value","getPropertyValue","trim","join","themeAttribute","getAttribute","includes","commonElements","cards","buttons","forms","modals","navbars","footers","Object","entries","elementType","elements","conflictingClasses","elementsWithTransitions","focusableElements","elementsWithoutFocusStyles","styles","report","timestamp","Date","toISOString","theme","summary","totalIssues","totalWarnings","overallStatus","log","info","error","window","themeValidationReport","sessionStorage","setItem","JSON","stringify","measureThemePerformance","callback","startTime","performance","now","observer","MutationObserver","mutations","endTime","duration","toFixed","disconnect","observe","attributes","attributeFilter","checkContrastRatio","foreground","background","hexToRgb","hex","result","exec","r","parseInt","g","b","getLuminance","rgb","rs","gs","bs","map","c","Math","pow","fg","bg","l1","l2","ratio","max","min","aa","aaa","level","process","env","NODE_ENV","validateTheme","mutation","type","attributeName","setTimeout"],"sources":["D:/Projects/NexusEd/frontend/src/utils/themeValidator.js"],"sourcesContent":["// Theme validation utility for development and debugging\r\nexport const validateThemeConsistency = () => {\r\n  const issues = [];\r\n  const warnings = [];\r\n  const suggestions = [];\r\n\r\n  // Check for hardcoded colors in style attributes\r\n  const elementsWithHardcodedColors = document.querySelectorAll(\r\n    '[style*=\"color:\"], [style*=\"background:\"], [style*=\"border-color:\"]'\r\n  );\r\n\r\n  if (elementsWithHardcodedColors.length > 0) {\r\n    issues.push(\r\n      `Found ${elementsWithHardcodedColors.length} elements with hardcoded colors in style attributes`\r\n    );\r\n\r\n    // Log specific elements for debugging\r\n    elementsWithHardcodedColors.forEach((el, index) => {\r\n      if (index < 5) {\r\n        // Limit to first 5 for readability\r\n        console.warn(`Hardcoded color element ${index + 1}:`, el);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Check for missing CSS variables\r\n  const requiredVariables = [\r\n    \"--nexus-bg-primary\",\r\n    \"--nexus-bg-secondary\",\r\n    \"--nexus-bg-tertiary\",\r\n    \"--nexus-text-primary\",\r\n    \"--nexus-text-secondary\",\r\n    \"--nexus-border\",\r\n    \"--nexus-primary\",\r\n    \"--nexus-secondary\",\r\n    \"--nexus-shadow\",\r\n  ];\r\n\r\n  const rootStyles = getComputedStyle(document.documentElement);\r\n  const missingVariables = [];\r\n\r\n  requiredVariables.forEach((variable) => {\r\n    const value = rootStyles.getPropertyValue(variable);\r\n    if (!value || value.trim() === \"\") {\r\n      missingVariables.push(variable);\r\n    }\r\n  });\r\n\r\n  if (missingVariables.length > 0) {\r\n    issues.push(`Missing CSS variables: ${missingVariables.join(\", \")}`);\r\n  }\r\n\r\n  // Check Bootstrap theme attribute\r\n  const themeAttribute = document.documentElement.getAttribute(\"data-bs-theme\");\r\n  if (!themeAttribute) {\r\n    issues.push(\"Missing data-bs-theme attribute on document element\");\r\n  } else if (![\"light\", \"dark\"].includes(themeAttribute)) {\r\n    issues.push(`Invalid theme attribute value: ${themeAttribute}`);\r\n  }\r\n\r\n  // Check for elements that might not be themed properly\r\n  const commonElements = {\r\n    cards: document.querySelectorAll(\".card\"),\r\n    buttons: document.querySelectorAll(\".btn\"),\r\n    forms: document.querySelectorAll(\".form-control\"),\r\n    modals: document.querySelectorAll(\".modal-content\"),\r\n    navbars: document.querySelectorAll(\".navbar\"),\r\n    footers: document.querySelectorAll(\"footer\"),\r\n  };\r\n\r\n  Object.entries(commonElements).forEach(([elementType, elements]) => {\r\n    if (elements.length === 0) {\r\n      warnings.push(`No ${elementType} found on current page`);\r\n    } else {\r\n      suggestions.push(\r\n        `${elements.length} ${elementType} detected and should be themed`\r\n      );\r\n    }\r\n  });\r\n\r\n  // Check for potential CSS conflicts\r\n  const conflictingClasses = document.querySelectorAll(\r\n    \".bg-white, .bg-dark, .text-white, .text-dark\"\r\n  );\r\n\r\n  if (conflictingClasses.length > 0) {\r\n    warnings.push(\r\n      `Found ${conflictingClasses.length} elements with potential Bootstrap color conflicts`\r\n    );\r\n  }\r\n\r\n  // Check transition performance\r\n  const elementsWithTransitions = document.querySelectorAll(\r\n    '[style*=\"transition\"], .card, .btn, .navbar-custom'\r\n  );\r\n  if (elementsWithTransitions.length > 100) {\r\n    warnings.push(\r\n      `High number of elements with transitions (${elementsWithTransitions.length}) may impact performance`\r\n    );\r\n  }\r\n\r\n  // Check for accessibility\r\n  const focusableElements = document.querySelectorAll(\r\n    \"button, input, select, textarea, a[href]\"\r\n  );\r\n  let elementsWithoutFocusStyles = 0;\r\n\r\n  focusableElements.forEach((el) => {\r\n    const styles = getComputedStyle(el);\r\n    if (\r\n      !styles.getPropertyValue(\"outline\") &&\r\n      !styles.getPropertyValue(\"box-shadow\")\r\n    ) {\r\n      elementsWithoutFocusStyles++;\r\n    }\r\n  });\r\n\r\n  if (elementsWithoutFocusStyles > 0) {\r\n    warnings.push(\r\n      `${elementsWithoutFocusStyles} focusable elements may lack proper focus indicators`\r\n    );\r\n  }\r\n\r\n  // Generate report\r\n  const report = {\r\n    timestamp: new Date().toISOString(),\r\n    theme: themeAttribute,\r\n    issues: issues,\r\n    warnings: warnings,\r\n    suggestions: suggestions,\r\n    summary: {\r\n      totalIssues: issues.length,\r\n      totalWarnings: warnings.length,\r\n      overallStatus: issues.length === 0 ? \"PASS\" : \"FAIL\",\r\n    },\r\n  };\r\n\r\n  // Console output\r\n  if (report.summary.overallStatus === \"PASS\") {\r\n    console.log(\"✅ Theme validation PASSED - all components properly themed\");\r\n\r\n    if (warnings.length > 0) {\r\n      console.warn(\"⚠️ Warnings found:\", warnings);\r\n    }\r\n\r\n    if (suggestions.length > 0) {\r\n      console.info(\"💡 Suggestions:\", suggestions);\r\n    }\r\n  } else {\r\n    console.error(\"❌ Theme validation FAILED\");\r\n    console.error(\"🐛 Issues found:\", issues);\r\n\r\n    if (warnings.length > 0) {\r\n      console.warn(\"⚠️ Additional warnings:\", warnings);\r\n    }\r\n  }\r\n\r\n  // Store validation results for debugging\r\n  if (typeof window !== \"undefined\") {\r\n    window.themeValidationReport = report;\r\n    sessionStorage.setItem(\"themeValidationReport\", JSON.stringify(report));\r\n  }\r\n\r\n  return report;\r\n};\r\n\r\n// Performance monitoring for theme switches\r\nexport const measureThemePerformance = (callback) => {\r\n  const startTime = performance.now();\r\n\r\n  const observer = new MutationObserver((mutations) => {\r\n    const endTime = performance.now();\r\n    const duration = endTime - startTime;\r\n\r\n    console.log(`🔄 Theme switch performance: ${duration.toFixed(2)}ms`);\r\n\r\n    if (duration > 100) {\r\n      console.warn(\"⚠️ Theme switch took longer than expected (>100ms)\");\r\n    }\r\n\r\n    observer.disconnect();\r\n\r\n    if (callback) callback(duration);\r\n  });\r\n\r\n  observer.observe(document.documentElement, {\r\n    attributes: true,\r\n    attributeFilter: [\"data-bs-theme\"],\r\n  });\r\n\r\n  return observer;\r\n};\r\n\r\n// Utility to check contrast ratios (accessibility)\r\nexport const checkContrastRatio = (foreground, background) => {\r\n  // Convert hex to RGB\r\n  const hexToRgb = (hex) => {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result\r\n      ? {\r\n          r: parseInt(result[1], 16),\r\n          g: parseInt(result[2], 16),\r\n          b: parseInt(result[3], 16),\r\n        }\r\n      : null;\r\n  };\r\n\r\n  // Calculate relative luminance\r\n  const getLuminance = (rgb) => {\r\n    const { r, g, b } = rgb;\r\n    const [rs, gs, bs] = [r, g, b].map((c) => {\r\n      c = c / 255;\r\n      return c <= 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\r\n    });\r\n    return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;\r\n  };\r\n\r\n  const fg = hexToRgb(foreground);\r\n  const bg = hexToRgb(background);\r\n\r\n  if (!fg || !bg) return null;\r\n\r\n  const l1 = getLuminance(fg);\r\n  const l2 = getLuminance(bg);\r\n\r\n  const ratio = (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05);\r\n\r\n  return {\r\n    ratio: ratio,\r\n    aa: ratio >= 4.5,\r\n    aaa: ratio >= 7,\r\n    level: ratio >= 7 ? \"AAA\" : ratio >= 4.5 ? \"AA\" : \"FAIL\",\r\n  };\r\n};\r\n\r\n// Development helper functions\r\nif (process.env.NODE_ENV === \"development\") {\r\n  // Make functions available globally for debugging\r\n  window.validateTheme = validateThemeConsistency;\r\n  window.measureThemePerformance = measureThemePerformance;\r\n  window.checkContrastRatio = checkContrastRatio;\r\n\r\n  // Auto-validate on theme changes\r\n  const observer = new MutationObserver((mutations) => {\r\n    mutations.forEach((mutation) => {\r\n      if (\r\n        mutation.type === \"attributes\" &&\r\n        mutation.attributeName === \"data-bs-theme\"\r\n      ) {\r\n        setTimeout(() => {\r\n          validateThemeConsistency();\r\n        }, 100);\r\n      }\r\n    });\r\n  });\r\n\r\n  observer.observe(document.documentElement, {\r\n    attributes: true,\r\n    attributeFilter: [\"data-bs-theme\"],\r\n  });\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}