{"ast":null,"code":"var _jsxFileName = \"D:\\\\nexused\\\\frontend\\\\src\\\\components\\\\PostCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faThumbsUp, faThumbsDown } from \"@fortawesome/free-regular-svg-icons\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostCard({\n  title,\n  content,\n  author,\n  id,\n  setPosts,\n  currentUser,\n  comments,\n  likes,\n  post\n}) {\n  _s();\n  var _post$author5, _post$author5$_id;\n  const [commentContent, setCommentContent] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isCommenting, setIsCommenting] = useState(false);\n  const timeoutRef = useRef(null);\n  const setTemporaryError = message => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setError(message);\n    timeoutRef.current = setTimeout(() => {\n      setError(\"\");\n      timeoutRef.current = null;\n    }, 3000);\n  };\n  useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n  const handleDeletePost = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/posts/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"Failed to delete post\");\n      }\n      setPosts(prevPosts => prevPosts.filter(post => post._id !== id));\n      setError(\"\");\n    } catch (err) {\n      setTemporaryError(err.message || \"Failed to delete post\");\n    }\n  };\n  const handleDeleteComment = async commentId => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/posts/${id}/comments/${commentId}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"Failed to delete comment\");\n      }\n      const updatedPost = await response.json();\n      setPosts(prevPosts => prevPosts.map(post => {\n        var _updatedPost$author, _post$author;\n        return post._id === id ? {\n          ...updatedPost,\n          author: (_updatedPost$author = updatedPost.author) !== null && _updatedPost$author !== void 0 && _updatedPost$author.username ? updatedPost.author : {\n            username: author,\n            _id: (_post$author = post.author) === null || _post$author === void 0 ? void 0 : _post$author._id\n          }\n        } : post;\n      }));\n      setError(\"\");\n    } catch (err) {\n      setTemporaryError(err.message || \"Failed to delete comment\");\n    }\n  };\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setIsCommenting(true);\n    if (!commentContent.trim()) {\n      setTemporaryError(\"Comment cannot be empty\");\n      setIsCommenting(false);\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/posts/${id}/comments`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          content: commentContent\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"Failed to add comment\");\n      }\n      const updatedPost = await response.json();\n      setPosts(prevPosts => prevPosts.map(post => {\n        var _updatedPost$author2, _post$author2;\n        return post._id === id ? {\n          ...updatedPost,\n          author: (_updatedPost$author2 = updatedPost.author) !== null && _updatedPost$author2 !== void 0 && _updatedPost$author2.username ? updatedPost.author : {\n            username: author,\n            _id: (_post$author2 = post.author) === null || _post$author2 === void 0 ? void 0 : _post$author2._id\n          }\n        } : post;\n      }));\n      setCommentContent(\"\");\n      setError(\"\");\n    } catch (err) {\n      setTemporaryError(err.message || \"Failed to add comment\");\n    } finally {\n      setIsCommenting(false);\n    }\n  };\n  const handleLikePost = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token || !currentUser) {\n        throw new Error(\"User must be logged in to like a post\");\n      }\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/posts/${id}/like`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error((errorData === null || errorData === void 0 ? void 0 : errorData.message) || `Failed to like post (HTTP ${response.status})`);\n      }\n      const updatedPost = await response.json();\n      if (!updatedPost._id) {\n        throw new Error(\"Invalid response: Missing _id\");\n      }\n      setPosts(prevPosts => {\n        const newPosts = prevPosts.map(post => {\n          if (post._id === id) {\n            var _updatedPost$author3, _post$author3;\n            const newAuthor = typeof updatedPost.author === \"object\" && (_updatedPost$author3 = updatedPost.author) !== null && _updatedPost$author3 !== void 0 && _updatedPost$author3.username ? updatedPost.author : {\n              username: author,\n              _id: typeof updatedPost.author === \"string\" ? updatedPost.author : (_post$author3 = post.author) === null || _post$author3 === void 0 ? void 0 : _post$author3._id\n            };\n            const updated = {\n              ...updatedPost,\n              author: newAuthor,\n              comments: Array.isArray(updatedPost.comments) ? updatedPost.comments : post.comments || [],\n              likes: Array.isArray(updatedPost.likes) ? updatedPost.likes : post.likes || []\n            };\n            return updated;\n          }\n          return post;\n        });\n        return newPosts;\n      });\n      setError(\"\");\n    } catch (err) {\n      setTemporaryError(err.message || \"Failed to like post\");\n    }\n  };\n  const handleLikeComment = async commentId => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token || !currentUser) {\n        throw new Error(\"User must be logged in to like a comment\");\n      }\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/posts/${id}/comments/${commentId}/like`, {\n        className: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || `Failed to like comment (HTTP ${response.status})`);\n      }\n      const updatedPost = await response.json();\n      setPosts(prevPosts => prevPosts.map(post => {\n        var _updatedPost$author4, _post$author4;\n        return post._id === id ? {\n          ...updatedPost,\n          author: typeof updatedPost.author === \"object\" && (_updatedPost$author4 = updatedPost.author) !== null && _updatedPost$author4 !== void 0 && _updatedPost$author4.username ? updatedPost.author : {\n            username: author,\n            _id: typeof updatedPost.author === \"string\" ? updatedPost.author : (_post$author4 = post.author) === null || _post$author4 === void 0 ? void 0 : _post$author4._id\n          }\n        } : post;\n      }));\n      setError(\"\");\n    } catch (err) {\n      setTemporaryError(err.message || \"Failed to like comment\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-lg shadow-md hover:shadow-lg hover:-translate-y-1 transition duration-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold text-gray-800 mb-2\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600 mb-3\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500 text-sm mb-4\",\n      children: [\"Posted by \", author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center space-x-3 mb-6\",\n      children: [currentUser && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLikePost,\n        className: \"bg-blue-600 text-white px-3 py-1 rounded-md hover:bg-blue-700 transition duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 text-sm flex items-center space-x-1\",\n        disabled: !currentUser,\n        \"aria-label\": likes && currentUser && likes.includes(currentUser.id.toString()) ? \"Unlike Post\" : \"Like Post\",\n        children: [likes && currentUser && likes.includes(currentUser.id.toString()) ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faThumbsDown,\n          className: \"text-base\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faThumbsUp,\n          className: \"text-base\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"(\", likes ? likes.length : 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this), currentUser && ((_post$author5 = post.author) === null || _post$author5 === void 0 ? void 0 : (_post$author5$_id = _post$author5._id) === null || _post$author5$_id === void 0 ? void 0 : _post$author5$_id.toString()) === currentUser.id && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeletePost,\n        className: \"bg-red-600 text-white px-3 py-1 rounded-md hover:bg-red-700 transition duration-200 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 text-sm flex items-center space-x-1\",\n        \"aria-label\": \"Delete Post\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTrash,\n          className: \"text-base\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 text-red-700 p-3 mb-6 rounded-md message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-lg font-semibold text-gray-800 mb-4\",\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), comments && comments.length > 0 ? comments.map(comment => {\n        var _comment$author, _comment$author2, _comment$author2$_id;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-100 p-4 mb-3 rounded-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mb-2\",\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 text-sm mb-2\",\n            children: [\"By \", ((_comment$author = comment.author) === null || _comment$author === void 0 ? void 0 : _comment$author.username) || \"Unknown\", \" on\", \" \", new Date(comment.createdAt).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-3\",\n            children: [currentUser && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleLikeComment(comment._id),\n              className: \"bg-blue-600 text-white px-3 py-1 rounded-md hover:bg-blue-700 transition duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 text-sm flex items-center space-x-1\",\n              disabled: !currentUser,\n              \"aria-label\": comment.likes && currentUser && comment.likes.includes(currentUser.id.toString()) ? \"Unlike Comment\" : \"Like Comment\",\n              children: [comment.likes && currentUser && comment.likes.includes(currentUser.id.toString()) ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faThumbsDown,\n                className: \"text-base\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faThumbsUp,\n                className: \"text-base\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"(\", comment.likes ? comment.likes.length : 0, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this), currentUser && ((_comment$author2 = comment.author) === null || _comment$author2 === void 0 ? void 0 : (_comment$author2$_id = _comment$author2._id) === null || _comment$author2$_id === void 0 ? void 0 : _comment$author2$_id.toString()) === currentUser.id && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteComment(comment._id),\n              className: \"bg-red-600 text-white px-3 py-1 rounded-md hover:bg-red-700 transition duration-200 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 text-sm flex items-center space-x-1\",\n              \"aria-label\": \"Delete Comment\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrash,\n                className: \"text-base\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this)]\n        }, comment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 text-sm mb-4\",\n        children: \"No comments yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this), currentUser && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCommentSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: commentContent,\n          onChange: e => setCommentContent(e.target.value),\n          placeholder: \"Add a comment\",\n          className: \"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition duration-150 mb-4\",\n          rows: \"2\",\n          disabled: isCommenting,\n          \"aria-label\": \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50\",\n          disabled: isCommenting,\n          \"aria-label\": \"Submit Comment\",\n          children: isCommenting ? \"Commenting...\" : \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n}\n_s(PostCard, \"y6EPQk68ry6qwUVEn76sVWac3pw=\");\n_c = PostCard;\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FontAwesomeIcon","faThumbsUp","faThumbsDown","faTrash","jsxDEV","_jsxDEV","PostCard","title","content","author","id","setPosts","currentUser","comments","likes","post","_s","_post$author5","_post$author5$_id","commentContent","setCommentContent","error","setError","isCommenting","setIsCommenting","timeoutRef","setTemporaryError","message","current","clearTimeout","setTimeout","handleDeletePost","token","localStorage","getItem","response","fetch","process","env","REACT_APP_API_URL","method","headers","Authorization","ok","errorData","json","Error","prevPosts","filter","_id","err","handleDeleteComment","commentId","updatedPost","map","_updatedPost$author","_post$author","username","handleCommentSubmit","e","preventDefault","trim","body","JSON","stringify","_updatedPost$author2","_post$author2","handleLikePost","status","newPosts","_updatedPost$author3","_post$author3","newAuthor","updated","Array","isArray","handleLikeComment","className","_updatedPost$author4","_post$author4","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","includes","toString","icon","length","comment","_comment$author","_comment$author2","_comment$author2$_id","Date","createdAt","toLocaleDateString","onSubmit","value","onChange","target","placeholder","rows","type","_c","$RefreshReg$"],"sources":["D:/nexused/frontend/src/components/PostCard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faThumbsUp, faThumbsDown } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction PostCard({\r\n  title,\r\n  content,\r\n  author,\r\n  id,\r\n  setPosts,\r\n  currentUser,\r\n  comments,\r\n  likes,\r\n  post,\r\n}) {\r\n  const [commentContent, setCommentContent] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isCommenting, setIsCommenting] = useState(false);\r\n  const timeoutRef = useRef(null);\r\n\r\n  const setTemporaryError = (message) => {\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current);\r\n    }\r\n    setError(message);\r\n    timeoutRef.current = setTimeout(() => {\r\n      setError(\"\");\r\n      timeoutRef.current = null;\r\n    }, 3000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (timeoutRef.current) {\r\n        clearTimeout(timeoutRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleDeletePost = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/api/posts/${id}`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || \"Failed to delete post\");\r\n      }\r\n      setPosts((prevPosts) => prevPosts.filter((post) => post._id !== id));\r\n      setError(\"\");\r\n    } catch (err) {\r\n      setTemporaryError(err.message || \"Failed to delete post\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteComment = async (commentId) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/api/posts/${id}/comments/${commentId}`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || \"Failed to delete comment\");\r\n      }\r\n      const updatedPost = await response.json();\r\n      setPosts((prevPosts) =>\r\n        prevPosts.map((post) =>\r\n          post._id === id\r\n            ? {\r\n                ...updatedPost,\r\n                author: updatedPost.author?.username\r\n                  ? updatedPost.author\r\n                  : { username: author, _id: post.author?._id },\r\n              }\r\n            : post\r\n        )\r\n      );\r\n      setError(\"\");\r\n    } catch (err) {\r\n      setTemporaryError(err.message || \"Failed to delete comment\");\r\n    }\r\n  };\r\n\r\n  const handleCommentSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setIsCommenting(true);\r\n\r\n    if (!commentContent.trim()) {\r\n      setTemporaryError(\"Comment cannot be empty\");\r\n      setIsCommenting(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/api/posts/${id}/comments`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify({ content: commentContent }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || \"Failed to add comment\");\r\n      }\r\n\r\n      const updatedPost = await response.json();\r\n      setPosts((prevPosts) =>\r\n        prevPosts.map((post) =>\r\n          post._id === id\r\n            ? {\r\n                ...updatedPost,\r\n                author: updatedPost.author?.username\r\n                  ? updatedPost.author\r\n                  : { username: author, _id: post.author?._id },\r\n              }\r\n            : post\r\n        )\r\n      );\r\n      setCommentContent(\"\");\r\n      setError(\"\");\r\n    } catch (err) {\r\n      setTemporaryError(err.message || \"Failed to add comment\");\r\n    } finally {\r\n      setIsCommenting(false);\r\n    }\r\n  };\r\n\r\n  const handleLikePost = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token || !currentUser) {\r\n        throw new Error(\"User must be logged in to like a post\");\r\n      }\r\n\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/api/posts/${id}/like`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(\r\n          errorData?.message || `Failed to like post (HTTP ${response.status})`\r\n        );\r\n      }\r\n\r\n      const updatedPost = await response.json();\r\n      if (!updatedPost._id) {\r\n        throw new Error(\"Invalid response: Missing _id\");\r\n      }\r\n\r\n      setPosts((prevPosts) => {\r\n        const newPosts = prevPosts.map((post) => {\r\n          if (post._id === id) {\r\n            const newAuthor =\r\n              typeof updatedPost.author === \"object\" &&\r\n              updatedPost.author?.username\r\n                ? updatedPost.author\r\n                : {\r\n                    username: author,\r\n                    _id:\r\n                      typeof updatedPost.author === \"string\"\r\n                        ? updatedPost.author\r\n                        : post.author?._id,\r\n                  };\r\n            const updated = {\r\n              ...updatedPost,\r\n              author: newAuthor,\r\n              comments: Array.isArray(updatedPost.comments)\r\n                ? updatedPost.comments\r\n                : post.comments || [],\r\n              likes: Array.isArray(updatedPost.likes)\r\n                ? updatedPost.likes\r\n                : post.likes || [],\r\n            };\r\n            return updated;\r\n          }\r\n          return post;\r\n        });\r\n        return newPosts;\r\n      });\r\n      setError(\"\");\r\n    } catch (err) {\r\n      setTemporaryError(err.message || \"Failed to like post\");\r\n    }\r\n  };\r\n\r\n  const handleLikeComment = async (commentId) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token || !currentUser) {\r\n        throw new Error(\"User must be logged in to like a comment\");\r\n      }\r\n\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/api/posts/${id}/comments/${commentId}/like`,\r\n        {\r\n          className: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(\r\n          errorData.message ||\r\n            `Failed to like comment (HTTP ${response.status})`\r\n        );\r\n      }\r\n\r\n      const updatedPost = await response.json();\r\n      setPosts((prevPosts) =>\r\n        prevPosts.map((post) =>\r\n          post._id === id\r\n            ? {\r\n                ...updatedPost,\r\n                author:\r\n                  typeof updatedPost.author === \"object\" &&\r\n                  updatedPost.author?.username\r\n                    ? updatedPost.author\r\n                    : {\r\n                        username: author,\r\n                        _id:\r\n                          typeof updatedPost.author === \"string\"\r\n                            ? updatedPost.author\r\n                            : post.author?._id,\r\n                      },\r\n              }\r\n            : post\r\n        )\r\n      );\r\n      setError(\"\");\r\n    } catch (err) {\r\n      setTemporaryError(err.message || \"Failed to like comment\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-lg shadow-md hover:shadow-lg hover:-translate-y-1 transition duration-200\">\r\n      <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">{title}</h2>\r\n      <p className=\"text-gray-600 mb-3\">{content}</p>\r\n      <p className=\"text-gray-500 text-sm mb-4\">Posted by {author}</p>\r\n      <div className=\"flex items-center space-x-3 mb-6\">\r\n        {currentUser && (\r\n          <button\r\n            onClick={handleLikePost}\r\n            className=\"bg-blue-600 text-white px-3 py-1 rounded-md hover:bg-blue-700 transition duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 text-sm flex items-center space-x-1\"\r\n            disabled={!currentUser}\r\n            aria-label={\r\n              likes && currentUser && likes.includes(currentUser.id.toString())\r\n                ? \"Unlike Post\"\r\n                : \"Like Post\"\r\n            }\r\n          >\r\n            {likes &&\r\n            currentUser &&\r\n            likes.includes(currentUser.id.toString()) ? (\r\n              <FontAwesomeIcon icon={faThumbsDown} className=\"text-base\" />\r\n            ) : (\r\n              <FontAwesomeIcon icon={faThumbsUp} className=\"text-base\" />\r\n            )}\r\n            <span>({likes ? likes.length : 0})</span>\r\n          </button>\r\n        )}\r\n        {currentUser && post.author?._id?.toString() === currentUser.id && (\r\n          <button\r\n            onClick={handleDeletePost}\r\n            className=\"bg-red-600 text-white px-3 py-1 rounded-md hover:bg-red-700 transition duration-200 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 text-sm flex items-center space-x-1\"\r\n            aria-label=\"Delete Post\"\r\n          >\r\n            <FontAwesomeIcon icon={faTrash} className=\"text-base\" />\r\n          </button>\r\n        )}\r\n      </div>\r\n      {error && (\r\n        <div className=\"bg-red-100 text-red-700 p-3 mb-6 rounded-md message\">\r\n          {error}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <h4 className=\"text-lg font-semibold text-gray-800 mb-4\">Comments</h4>\r\n        {comments && comments.length > 0 ? (\r\n          comments.map((comment) => (\r\n            <div key={comment._id} className=\"bg-gray-100 p-4 mb-3 rounded-md\">\r\n              <p className=\"text-gray-600 mb-2\">{comment.content}</p>\r\n              <p className=\"text-gray-500 text-sm mb-2\">\r\n                By {comment.author?.username || \"Unknown\"} on{\" \"}\r\n                {new Date(comment.createdAt).toLocaleDateString()}\r\n              </p>\r\n              <div className=\"flex items-center space-x-3\">\r\n                {currentUser && (\r\n                  <button\r\n                    onClick={() => handleLikeComment(comment._id)}\r\n                    className=\"bg-blue-600 text-white px-3 py-1 rounded-md hover:bg-blue-700 transition duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 text-sm flex items-center space-x-1\"\r\n                    disabled={!currentUser}\r\n                    aria-label={\r\n                      comment.likes &&\r\n                      currentUser &&\r\n                      comment.likes.includes(currentUser.id.toString())\r\n                        ? \"Unlike Comment\"\r\n                        : \"Like Comment\"\r\n                    }\r\n                  >\r\n                    {comment.likes &&\r\n                    currentUser &&\r\n                    comment.likes.includes(currentUser.id.toString()) ? (\r\n                      <FontAwesomeIcon\r\n                        icon={faThumbsDown}\r\n                        className=\"text-base\"\r\n                      />\r\n                    ) : (\r\n                      <FontAwesomeIcon\r\n                        icon={faThumbsUp}\r\n                        className=\"text-base\"\r\n                      />\r\n                    )}\r\n                    <span>({comment.likes ? comment.likes.length : 0})</span>\r\n                  </button>\r\n                )}\r\n                {currentUser &&\r\n                  comment.author?._id?.toString() === currentUser.id && (\r\n                    <button\r\n                      onClick={() => handleDeleteComment(comment._id)}\r\n                      className=\"bg-red-600 text-white px-3 py-1 rounded-md hover:bg-red-700 transition duration-200 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 text-sm flex items-center space-x-1\"\r\n                      aria-label=\"Delete Comment\"\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrash} className=\"text-base\" />\r\n                    </button>\r\n                  )}\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p className=\"text-gray-600 text-sm mb-4\">No comments yet.</p>\r\n        )}\r\n        {currentUser && (\r\n          <form onSubmit={handleCommentSubmit}>\r\n            <textarea\r\n              value={commentContent}\r\n              onChange={(e) => setCommentContent(e.target.value)}\r\n              placeholder=\"Add a comment\"\r\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition duration-150 mb-4\"\r\n              rows=\"2\"\r\n              disabled={isCommenting}\r\n              aria-label=\"Comment\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50\"\r\n              disabled={isCommenting}\r\n              aria-label=\"Submit Comment\"\r\n            >\r\n              {isCommenting ? \"Commenting...\" : \"Comment\"}\r\n            </button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}