{"ast":null,"code":"var _jsxFileName = \"D:\\\\nexused\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport PostForm from \"./PostForm\";\nimport PostCard from \"./PostCard\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/api/posts`);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch posts\");\n        }\n        const data = await response.json();\n        setPosts(data);\n      } catch (err) {\n        console.error(\"Error fetching posts:\", err);\n      }\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      setPosts: setPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n        id: post._id,\n        title: post.title,\n        content: post.content,\n        author: post.author.username,\n        comments: post.comments,\n        likes: post.likes,\n        setPosts: setPosts,\n        currentUser: user\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"4WNCxz+4P2TcM/gd08rAtk1EWA0=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useContext","PostForm","PostCard","AuthContext","jsxDEV","_jsxDEV","Home","_s","user","posts","setPosts","fetchPosts","response","fetch","process","env","REACT_APP_API_URL","ok","Error","data","json","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","id","_id","title","content","author","username","comments","likes","currentUser","_c","$RefreshReg$"],"sources":["D:/nexused/frontend/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport PostForm from \"./PostForm\";\r\nimport PostCard from \"./PostCard\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nfunction Home() {\r\n  const { user } = useContext(AuthContext);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `${process.env.REACT_APP_API_URL}/api/posts`\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch posts\");\r\n        }\r\n        const data = await response.json();\r\n        setPosts(data);\r\n      } catch (err) {\r\n        console.error(\"Error fetching posts:\", err);\r\n      }\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <PostForm setPosts={setPosts} />\r\n      <div>\r\n        {posts.map((post) => (\r\n          <PostCard\r\n            key={post._id}\r\n            id={post._id}\r\n            title={post.title}\r\n            content={post.content}\r\n            author={post.author.username}\r\n            comments={post.comments}\r\n            likes={post.likes}\r\n            setPosts={setPosts}\r\n            currentUser={user}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC;EAAK,CAAC,GAAGR,UAAU,CAACG,WAAW,CAAC;EACxC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,YAClC,CAAC;QACD,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCV,QAAQ,CAACS,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC7C;IACF,CAAC;IACDV,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKmB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCpB,OAAA,CAACJ,QAAQ;MAACS,QAAQ,EAAEA;IAAS;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCxB,OAAA;MAAAoB,QAAA,EACGhB,KAAK,CAACqB,GAAG,CAAEC,IAAI,iBACd1B,OAAA,CAACH,QAAQ;QAEP8B,EAAE,EAAED,IAAI,CAACE,GAAI;QACbC,KAAK,EAAEH,IAAI,CAACG,KAAM;QAClBC,OAAO,EAAEJ,IAAI,CAACI,OAAQ;QACtBC,MAAM,EAAEL,IAAI,CAACK,MAAM,CAACC,QAAS;QAC7BC,QAAQ,EAAEP,IAAI,CAACO,QAAS;QACxBC,KAAK,EAAER,IAAI,CAACQ,KAAM;QAClB7B,QAAQ,EAAEA,QAAS;QACnB8B,WAAW,EAAEhC;MAAK,GARbuB,IAAI,CAACE,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASd,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CA1CQD,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AA4Cb,eAAeA,IAAI;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}