{"ast":null,"code":"var _jsxFileName = \"D:\\\\nexused\\\\frontend\\\\src\\\\components\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport PostCard from \"./PostCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  // Mock user data (replace with real user data when authentication is added)\n  const user = {\n    username: \"Anonymous\",\n    bio: \"A student passionate about learning and sharing knowledge.\"\n  };\n  useEffect(() => {\n    const fetchUserPosts = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/api/posts?author=${user.username}`);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch user posts\");\n        }\n        const data = await response.json();\n        setPosts(data);\n      } catch (err) {\n        console.error(\"Error fetching user posts:\", err);\n      }\n    };\n    fetchUserPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold text-gray-800 mb-2\",\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: user.bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold text-gray-800 mb-4\",\n      children: \"My Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n        title: post.title,\n        content: post.content,\n        author: post.author\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"No posts yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","PostCard","jsxDEV","_jsxDEV","Profile","_s","posts","setPosts","user","username","bio","fetchUserPosts","response","fetch","process","env","REACT_APP_API_URL","ok","Error","data","json","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","title","content","author","_id","_c","$RefreshReg$"],"sources":["D:/nexused/frontend/src/components/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PostCard from \"./PostCard\";\r\n\r\nfunction Profile() {\r\n  const [posts, setPosts] = useState([]);\r\n  // Mock user data (replace with real user data when authentication is added)\r\n  const user = {\r\n    username: \"Anonymous\",\r\n    bio: \"A student passionate about learning and sharing knowledge.\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchUserPosts = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `${process.env.REACT_APP_API_URL}/api/posts?author=${user.username}`\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch user posts\");\r\n        }\r\n        const data = await response.json();\r\n        setPosts(data);\r\n      } catch (err) {\r\n        console.error(\"Error fetching user posts:\", err);\r\n      }\r\n    };\r\n    fetchUserPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <div className=\"bg-white p-6 rounded-lg shadow-md mb-6\">\r\n        <h2 className=\"text-2xl font-semibold text-gray-800 mb-2\">\r\n          {user.username}\r\n        </h2>\r\n        <p className=\"text-gray-600\">{user.bio}</p>\r\n      </div>\r\n      <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">My Posts</h3>\r\n      <div>\r\n        {posts.length > 0 ? (\r\n          posts.map((post) => (\r\n            <PostCard\r\n              key={post._id}\r\n              title={post.title}\r\n              content={post.content}\r\n              author={post.author}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p className=\"text-gray-600\">No posts yet.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA,MAAMS,IAAI,GAAG;IACXC,QAAQ,EAAE,WAAW;IACrBC,GAAG,EAAE;EACP,CAAC;EAEDV,SAAS,CAAC,MAAM;IACd,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,qBAAqBR,IAAI,CAACC,QAAQ,EACpE,CAAC;QACD,IAAI,CAACG,QAAQ,CAACK,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;QAC/C;QACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCb,QAAQ,CAACY,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;MAClD;IACF,CAAC;IACDV,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKqB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCtB,OAAA;MAAKqB,SAAS,EAAC,wCAAwC;MAAAC,QAAA,gBACrDtB,OAAA;QAAIqB,SAAS,EAAC,2CAA2C;QAAAC,QAAA,EACtDjB,IAAI,CAACC;MAAQ;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACL1B,OAAA;QAAGqB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEjB,IAAI,CAACE;MAAG;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACN1B,OAAA;MAAIqB,SAAS,EAAC,0CAA0C;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtE1B,OAAA;MAAAsB,QAAA,EACGnB,KAAK,CAACwB,MAAM,GAAG,CAAC,GACfxB,KAAK,CAACyB,GAAG,CAAEC,IAAI,iBACb7B,OAAA,CAACF,QAAQ;QAEPgC,KAAK,EAAED,IAAI,CAACC,KAAM;QAClBC,OAAO,EAAEF,IAAI,CAACE,OAAQ;QACtBC,MAAM,EAAEH,IAAI,CAACG;MAAO,GAHfH,IAAI,CAACI,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAId,CACF,CAAC,gBAEF1B,OAAA;QAAGqB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC9C;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxB,EAAA,CAnDQD,OAAO;AAAAiC,EAAA,GAAPjC,OAAO;AAqDhB,eAAeA,OAAO;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}