{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects_completed\\\\NexusEd\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Toast, ToastContainer } from \"react-bootstrap\";\n\n// Create the authentication context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [authError, setAuthError] = useState(null);\n  const [showToast, setShowToast] = useState(false);\n\n  // Check for existing token on initial load\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      axios.get(`${process.env.REACT_APP_API_URL}/api/auth/me`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        setUser(response.data); // Updated to handle flat response\n        setIsLoading(false);\n      }).catch(err => {\n        var _err$response;\n        console.error(\"Error fetching user:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n        localStorage.removeItem(\"token\");\n        setUser(null);\n        setIsLoading(false);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Handle authentication errors with Bootstrap Toast\n  useEffect(() => {\n    if (authError) {\n      setShowToast(true);\n      const timer = setTimeout(() => {\n        setShowToast(false);\n        setAuthError(null);\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [authError]);\n\n  // Enhanced login function with better validation error handling\n  const login = async (identifier, password) => {\n    try {\n      // Client-side validation\n      if (!identifier || !password) {\n        const errorMessage = \"Please enter both email/username and password.\";\n        setAuthError(errorMessage);\n        return {\n          success: false,\n          message: errorMessage\n        };\n      }\n      console.log(\"AuthContext login - Identifier:\", identifier);\n\n      // Convert identifier to lowercase for case-insensitive login\n      const normalizedIdentifier = identifier.toLowerCase().trim();\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/auth/login`, {\n        identifier: normalizedIdentifier,\n        password\n      });\n      if (response.data.token && response.data.user) {\n        localStorage.setItem(\"token\", response.data.token);\n        setUser(response.data.user);\n        console.log(\"AuthContext login - Success for user:\", response.data.user.username);\n        return {\n          success: true,\n          user: response.data.user\n        };\n      } else {\n        throw new Error(\"Invalid response format from server\");\n      }\n    } catch (err) {\n      var _err$response2, _err$response3, _err$response3$data;\n      console.error(\"AuthContext login - Error:\", ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n      const errorMessage = ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message || \"Login failed. Please check your credentials.\";\n      setAuthError(errorMessage);\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n\n  // Enhanced register function with better validation error handling\n  const register = async (username, email, password, confirmPassword = null) => {\n    try {\n      // Client-side validation with specific error messages\n      if (!username || !email || !password) {\n        const errorMessage = \"All fields are required.\";\n        setAuthError(errorMessage);\n        return {\n          success: false,\n          message: errorMessage\n        };\n      }\n\n      // Check password confirmation if provided\n      if (confirmPassword !== null && password !== confirmPassword) {\n        const errorMessage = \"Passwords do not match.\";\n        setAuthError(errorMessage);\n        return {\n          success: false,\n          message: errorMessage\n        };\n      }\n      if (username.length < 3) {\n        const errorMessage = \"Username must be at least 3 characters long.\";\n        setAuthError(errorMessage);\n        return {\n          success: false,\n          message: errorMessage\n        };\n      }\n      if (!/^[a-zA-Z0-9_]+$/.test(username)) {\n        const errorMessage = \"Username can only contain letters, numbers, and underscores.\";\n        setAuthError(errorMessage);\n        return {\n          success: false,\n          message: errorMessage\n        };\n      }\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(email)) {\n        const errorMessage = \"Please enter a valid email address.\";\n        setAuthError(errorMessage);\n        return {\n          success: false,\n          message: errorMessage\n        };\n      }\n      if (password.length < 8) {\n        const errorMessage = \"Password must be at least 8 characters long.\";\n        setAuthError(errorMessage);\n        return {\n          success: false,\n          message: errorMessage\n        };\n      }\n      console.log(\"AuthContext register - Starting registration for:\", username);\n\n      // Normalize inputs\n      const normalizedEmail = email.toLowerCase().trim();\n      const trimmedUsername = username.trim();\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/auth/register`, {\n        username: trimmedUsername,\n        email: normalizedEmail,\n        password\n      });\n      if (response.data.token && response.data.user) {\n        localStorage.setItem(\"token\", response.data.token);\n        setUser(response.data.user);\n        console.log(\"AuthContext register - Success for user:\", response.data.user.username);\n        return {\n          success: true,\n          user: response.data.user\n        };\n      } else {\n        throw new Error(\"Invalid response format from server\");\n      }\n    } catch (err) {\n      var _err$response4, _err$response5, _err$response5$data;\n      console.error(\"AuthContext register - Error:\", ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.data) || err.message);\n      const errorMessage = ((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || err.message || \"Registration failed. Please try again.\";\n      setAuthError(errorMessage);\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n\n  // Logout function - unchanged\n  const logout = () => {\n    console.log(\"AuthContext logout - Logging out user\");\n    localStorage.removeItem(\"token\");\n    setUser(null);\n  };\n\n  // Clear auth errors manually\n  const clearAuthError = () => {\n    setAuthError(null);\n    setShowToast(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      setUser,\n      isLoading,\n      login,\n      register,\n      logout,\n      authError,\n      clearAuthError\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-center\",\n      className: \"p-3\",\n      style: {\n        zIndex: 1100\n      },\n      children: /*#__PURE__*/_jsxDEV(Toast, {\n        show: showToast,\n        onClose: () => {\n          setShowToast(false);\n          setAuthError(null);\n        },\n        bg: \"danger\",\n        delay: 5000,\n        autohide: true,\n        children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"me-auto\",\n            children: \"Authentication Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n          className: \"text-white\",\n          children: authError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"ioIY07JNzmAYvucGURKmdqHcV4U=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","Toast","ToastContainer","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isLoading","setIsLoading","authError","setAuthError","showToast","setShowToast","token","localStorage","getItem","get","process","env","REACT_APP_API_URL","headers","Authorization","then","response","data","catch","err","_err$response","console","error","message","removeItem","timer","setTimeout","clearTimeout","login","identifier","password","errorMessage","success","log","normalizedIdentifier","toLowerCase","trim","post","setItem","username","Error","_err$response2","_err$response3","_err$response3$data","register","email","confirmPassword","length","test","emailRegex","normalizedEmail","trimmedUsername","_err$response4","_err$response5","_err$response5$data","logout","clearAuthError","Provider","value","position","className","style","zIndex","show","onClose","bg","delay","autohide","Header","fileName","_jsxFileName","lineNumber","columnNumber","Body","_c","$RefreshReg$"],"sources":["D:/Projects_completed/NexusEd/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Toast, ToastContainer } from \"react-bootstrap\";\r\n\r\n// Create the authentication context\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [authError, setAuthError] = useState(null);\r\n  const [showToast, setShowToast] = useState(false);\r\n\r\n  // Check for existing token on initial load\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      axios\r\n        .get(`${process.env.REACT_APP_API_URL}/api/auth/me`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setUser(response.data); // Updated to handle flat response\r\n          setIsLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.error(\r\n            \"Error fetching user:\",\r\n            err.response?.data || err.message\r\n          );\r\n          localStorage.removeItem(\"token\");\r\n          setUser(null);\r\n          setIsLoading(false);\r\n        });\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Handle authentication errors with Bootstrap Toast\r\n  useEffect(() => {\r\n    if (authError) {\r\n      setShowToast(true);\r\n      const timer = setTimeout(() => {\r\n        setShowToast(false);\r\n        setAuthError(null);\r\n      }, 3000);\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [authError]);\r\n\r\n  // Enhanced login function with better validation error handling\r\n  const login = async (identifier, password) => {\r\n    try {\r\n      // Client-side validation\r\n      if (!identifier || !password) {\r\n        const errorMessage = \"Please enter both email/username and password.\";\r\n        setAuthError(errorMessage);\r\n        return { success: false, message: errorMessage };\r\n      }\r\n\r\n      console.log(\"AuthContext login - Identifier:\", identifier);\r\n\r\n      // Convert identifier to lowercase for case-insensitive login\r\n      const normalizedIdentifier = identifier.toLowerCase().trim();\r\n\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/api/auth/login`,\r\n        { identifier: normalizedIdentifier, password }\r\n      );\r\n\r\n      if (response.data.token && response.data.user) {\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        setUser(response.data.user);\r\n        console.log(\r\n          \"AuthContext login - Success for user:\",\r\n          response.data.user.username\r\n        );\r\n        return { success: true, user: response.data.user };\r\n      } else {\r\n        throw new Error(\"Invalid response format from server\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\r\n        \"AuthContext login - Error:\",\r\n        err.response?.data || err.message\r\n      );\r\n\r\n      const errorMessage =\r\n        err.response?.data?.message ||\r\n        err.message ||\r\n        \"Login failed. Please check your credentials.\";\r\n\r\n      setAuthError(errorMessage);\r\n      return {\r\n        success: false,\r\n        message: errorMessage,\r\n      };\r\n    }\r\n  };\r\n\r\n  // Enhanced register function with better validation error handling\r\n  const register = async (\r\n    username,\r\n    email,\r\n    password,\r\n    confirmPassword = null\r\n  ) => {\r\n    try {\r\n      // Client-side validation with specific error messages\r\n      if (!username || !email || !password) {\r\n        const errorMessage = \"All fields are required.\";\r\n        setAuthError(errorMessage);\r\n        return { success: false, message: errorMessage };\r\n      }\r\n\r\n      // Check password confirmation if provided\r\n      if (confirmPassword !== null && password !== confirmPassword) {\r\n        const errorMessage = \"Passwords do not match.\";\r\n        setAuthError(errorMessage);\r\n        return { success: false, message: errorMessage };\r\n      }\r\n\r\n      if (username.length < 3) {\r\n        const errorMessage = \"Username must be at least 3 characters long.\";\r\n        setAuthError(errorMessage);\r\n        return { success: false, message: errorMessage };\r\n      }\r\n\r\n      if (!/^[a-zA-Z0-9_]+$/.test(username)) {\r\n        const errorMessage =\r\n          \"Username can only contain letters, numbers, and underscores.\";\r\n        setAuthError(errorMessage);\r\n        return { success: false, message: errorMessage };\r\n      }\r\n\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!emailRegex.test(email)) {\r\n        const errorMessage = \"Please enter a valid email address.\";\r\n        setAuthError(errorMessage);\r\n        return { success: false, message: errorMessage };\r\n      }\r\n\r\n      if (password.length < 8) {\r\n        const errorMessage = \"Password must be at least 8 characters long.\";\r\n        setAuthError(errorMessage);\r\n        return { success: false, message: errorMessage };\r\n      }\r\n\r\n      console.log(\r\n        \"AuthContext register - Starting registration for:\",\r\n        username\r\n      );\r\n\r\n      // Normalize inputs\r\n      const normalizedEmail = email.toLowerCase().trim();\r\n      const trimmedUsername = username.trim();\r\n\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/api/auth/register`,\r\n        {\r\n          username: trimmedUsername,\r\n          email: normalizedEmail,\r\n          password,\r\n        }\r\n      );\r\n\r\n      if (response.data.token && response.data.user) {\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        setUser(response.data.user);\r\n        console.log(\r\n          \"AuthContext register - Success for user:\",\r\n          response.data.user.username\r\n        );\r\n        return { success: true, user: response.data.user };\r\n      } else {\r\n        throw new Error(\"Invalid response format from server\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\r\n        \"AuthContext register - Error:\",\r\n        err.response?.data || err.message\r\n      );\r\n\r\n      const errorMessage =\r\n        err.response?.data?.message ||\r\n        err.message ||\r\n        \"Registration failed. Please try again.\";\r\n\r\n      setAuthError(errorMessage);\r\n      return {\r\n        success: false,\r\n        message: errorMessage,\r\n      };\r\n    }\r\n  };\r\n\r\n  // Logout function - unchanged\r\n  const logout = () => {\r\n    console.log(\"AuthContext logout - Logging out user\");\r\n    localStorage.removeItem(\"token\");\r\n    setUser(null);\r\n  };\r\n\r\n  // Clear auth errors manually\r\n  const clearAuthError = () => {\r\n    setAuthError(null);\r\n    setShowToast(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        setUser,\r\n        isLoading,\r\n        login,\r\n        register,\r\n        logout,\r\n        authError,\r\n        clearAuthError,\r\n      }}\r\n    >\r\n      {children}\r\n\r\n      {/* Bootstrap Toast for displaying auth errors */}\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        className=\"p-3\"\r\n        style={{ zIndex: 1100 }}\r\n      >\r\n        <Toast\r\n          show={showToast}\r\n          onClose={() => {\r\n            setShowToast(false);\r\n            setAuthError(null);\r\n          }}\r\n          bg=\"danger\"\r\n          delay={5000}\r\n          autohide\r\n        >\r\n          <Toast.Header>\r\n            <strong className=\"me-auto\">Authentication Error</strong>\r\n          </Toast.Header>\r\n          <Toast.Body className=\"text-white\">{authError}</Toast.Body>\r\n        </Toast>\r\n      </ToastContainer>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}