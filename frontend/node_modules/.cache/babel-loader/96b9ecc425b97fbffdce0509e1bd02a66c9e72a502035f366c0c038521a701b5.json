{"ast":null,"code":"import React,{createContext,useState,useEffect}from\"react\";import axios from\"axios\";// Create the authentication context\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isLoading,setIsLoading]=useState(true);// Check for existing token on initial load\nuseEffect(()=>{const token=localStorage.getItem(\"token\");if(token){axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"/api/auth/me\"),{headers:{Authorization:\"Bearer \".concat(token)}}).then(response=>{setUser(response.data);// Updated to handle flat response\nsetIsLoading(false);}).catch(err=>{var _err$response;console.error(\"Error fetching user:\",((_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.data)||err.message);localStorage.removeItem(\"token\");setUser(null);setIsLoading(false);});}else{setIsLoading(false);}},[]);// Enhanced login function with proper error handling and return values\nconst login=async(identifier,password)=>{try{console.log(\"AuthContext login - Identifier:\",identifier);// Convert identifier to lowercase for case-insensitive login\nconst normalizedIdentifier=identifier.toLowerCase().trim();const response=await axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/auth/login\"),{identifier:normalizedIdentifier,password});if(response.data.token&&response.data.user){localStorage.setItem(\"token\",response.data.token);setUser(response.data.user);console.log(\"AuthContext login - Success for user:\",response.data.user.username);return{success:true,user:response.data.user};}else{throw new Error(\"Invalid response format from server\");}}catch(err){var _err$response2,_err$response3,_err$response3$data;console.error(\"AuthContext login - Error:\",((_err$response2=err.response)===null||_err$response2===void 0?void 0:_err$response2.data)||err.message);const errorMessage=((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.message)||err.message||\"Login failed. Please check your credentials.\";return{success:false,message:errorMessage};}};// Enhanced register function with proper error handling and return values\nconst register=async(username,email,password)=>{try{console.log(\"AuthContext register - Starting registration for:\",username);// Normalize inputs\nconst normalizedEmail=email.toLowerCase().trim();const trimmedUsername=username.trim();const response=await axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/auth/register\"),{username:trimmedUsername,email:normalizedEmail,password});if(response.data.token&&response.data.user){localStorage.setItem(\"token\",response.data.token);setUser(response.data.user);console.log(\"AuthContext register - Success for user:\",response.data.user.username);return{success:true,user:response.data.user};}else{throw new Error(\"Invalid response format from server\");}}catch(err){var _err$response4,_err$response5,_err$response5$data;console.error(\"AuthContext register - Error:\",((_err$response4=err.response)===null||_err$response4===void 0?void 0:_err$response4.data)||err.message);const errorMessage=((_err$response5=err.response)===null||_err$response5===void 0?void 0:(_err$response5$data=_err$response5.data)===null||_err$response5$data===void 0?void 0:_err$response5$data.message)||err.message||\"Registration failed. Please try again.\";return{success:false,message:errorMessage};}};// Logout function - unchanged\nconst logout=()=>{console.log(\"AuthContext logout - Logging out user\");localStorage.removeItem(\"token\");setUser(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,setUser,isLoading,login,register,logout},children:children});};export default AuthProvider;","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","isLoading","setIsLoading","token","localStorage","getItem","get","concat","process","env","REACT_APP_API_URL","headers","Authorization","then","response","data","catch","err","_err$response","console","error","message","removeItem","login","identifier","password","log","normalizedIdentifier","toLowerCase","trim","post","setItem","username","success","Error","_err$response2","_err$response3","_err$response3$data","errorMessage","register","email","normalizedEmail","trimmedUsername","_err$response4","_err$response5","_err$response5$data","logout","Provider","value"],"sources":["/mnt/d/Projects/NexusEd/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// Create the authentication context\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Check for existing token on initial load\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      axios\r\n        .get(`${process.env.REACT_APP_API_URL}/api/auth/me`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setUser(response.data); // Updated to handle flat response\r\n          setIsLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.error(\r\n            \"Error fetching user:\",\r\n            err.response?.data || err.message\r\n          );\r\n          localStorage.removeItem(\"token\");\r\n          setUser(null);\r\n          setIsLoading(false);\r\n        });\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Enhanced login function with proper error handling and return values\r\n  const login = async (identifier, password) => {\r\n    try {\r\n      console.log(\"AuthContext login - Identifier:\", identifier);\r\n\r\n      // Convert identifier to lowercase for case-insensitive login\r\n      const normalizedIdentifier = identifier.toLowerCase().trim();\r\n\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/api/auth/login`,\r\n        { identifier: normalizedIdentifier, password }\r\n      );\r\n\r\n      if (response.data.token && response.data.user) {\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        setUser(response.data.user);\r\n        console.log(\r\n          \"AuthContext login - Success for user:\",\r\n          response.data.user.username\r\n        );\r\n        return { success: true, user: response.data.user };\r\n      } else {\r\n        throw new Error(\"Invalid response format from server\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\r\n        \"AuthContext login - Error:\",\r\n        err.response?.data || err.message\r\n      );\r\n\r\n      const errorMessage =\r\n        err.response?.data?.message ||\r\n        err.message ||\r\n        \"Login failed. Please check your credentials.\";\r\n\r\n      return {\r\n        success: false,\r\n        message: errorMessage,\r\n      };\r\n    }\r\n  };\r\n\r\n  // Enhanced register function with proper error handling and return values\r\n  const register = async (username, email, password) => {\r\n    try {\r\n      console.log(\r\n        \"AuthContext register - Starting registration for:\",\r\n        username\r\n      );\r\n\r\n      // Normalize inputs\r\n      const normalizedEmail = email.toLowerCase().trim();\r\n      const trimmedUsername = username.trim();\r\n\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/api/auth/register`,\r\n        {\r\n          username: trimmedUsername,\r\n          email: normalizedEmail,\r\n          password,\r\n        }\r\n      );\r\n\r\n      if (response.data.token && response.data.user) {\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        setUser(response.data.user);\r\n        console.log(\r\n          \"AuthContext register - Success for user:\",\r\n          response.data.user.username\r\n        );\r\n        return { success: true, user: response.data.user };\r\n      } else {\r\n        throw new Error(\"Invalid response format from server\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\r\n        \"AuthContext register - Error:\",\r\n        err.response?.data || err.message\r\n      );\r\n\r\n      const errorMessage =\r\n        err.response?.data?.message ||\r\n        err.message ||\r\n        \"Registration failed. Please try again.\";\r\n\r\n      return {\r\n        success: false,\r\n        message: errorMessage,\r\n      };\r\n    }\r\n  };\r\n\r\n  // Logout function - unchanged\r\n  const logout = () => {\r\n    console.log(\"AuthContext logout - Logging out user\");\r\n    localStorage.removeItem(\"token\");\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        setUser,\r\n        isLoading,\r\n        login,\r\n        register,\r\n        logout,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}