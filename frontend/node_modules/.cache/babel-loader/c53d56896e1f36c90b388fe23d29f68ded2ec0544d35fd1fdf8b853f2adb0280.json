{"ast":null,"code":"import { format } from \"date-fns\";\n\n// Fallback function to check if a date is valid\nexport const isDateValid = date => {\n  return date instanceof Date && !isNaN(date.getTime());\n};\n\n// Helper function to format dates safely\nexport const safeFormat = (date, formatStr, currentDateTime) => {\n  if (!isDateValid(date)) {\n    // Fallback to currentDateTime if the date is invalid\n    return format(currentDateTime, formatStr);\n  }\n  return format(date, formatStr);\n};","map":{"version":3,"names":["format","isDateValid","date","Date","isNaN","getTime","safeFormat","formatStr","currentDateTime"],"sources":["D:/Projects/NexusEd/frontend/src/utils/dateUtils.js"],"sourcesContent":["import { format } from \"date-fns\";\r\n\r\n// Fallback function to check if a date is valid\r\nexport const isDateValid = (date) => {\r\n  return date instanceof Date && !isNaN(date.getTime());\r\n};\r\n\r\n// Helper function to format dates safely\r\nexport const safeFormat = (date, formatStr, currentDateTime) => {\r\n  if (!isDateValid(date)) {\r\n    // Fallback to currentDateTime if the date is invalid\r\n    return format(currentDateTime, formatStr);\r\n  }\r\n  return format(date, formatStr);\r\n};\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,UAAU;;AAEjC;AACA,OAAO,MAAMC,WAAW,GAAIC,IAAI,IAAK;EACnC,OAAOA,IAAI,YAAYC,IAAI,IAAI,CAACC,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC;AACvD,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAGA,CAACJ,IAAI,EAAEK,SAAS,EAAEC,eAAe,KAAK;EAC9D,IAAI,CAACP,WAAW,CAACC,IAAI,CAAC,EAAE;IACtB;IACA,OAAOF,MAAM,CAACQ,eAAe,EAAED,SAAS,CAAC;EAC3C;EACA,OAAOP,MAAM,CAACE,IAAI,EAAEK,SAAS,CAAC;AAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}