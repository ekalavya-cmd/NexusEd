{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects_completed\\\\NexusEd\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Create the authentication context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Check for existing token on initial load\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      axios.get(`${process.env.REACT_APP_API_URL}/api/auth/me`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        setUser(response.data); // Updated to handle flat response\n        setIsLoading(false);\n      }).catch(err => {\n        var _err$response;\n        console.error(\"Error fetching user:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n        localStorage.removeItem(\"token\");\n        setUser(null);\n        setIsLoading(false);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Enhanced login function with proper error handling and return values\n  const login = async (identifier, password) => {\n    try {\n      console.log(\"AuthContext login - Identifier:\", identifier);\n\n      // Convert identifier to lowercase for case-insensitive login\n      const normalizedIdentifier = identifier.toLowerCase().trim();\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/auth/login`, {\n        identifier: normalizedIdentifier,\n        password\n      });\n      if (response.data.token && response.data.user) {\n        localStorage.setItem(\"token\", response.data.token);\n        setUser(response.data.user);\n        console.log(\"AuthContext login - Success for user:\", response.data.user.username);\n        return {\n          success: true,\n          user: response.data.user\n        };\n      } else {\n        throw new Error(\"Invalid response format from server\");\n      }\n    } catch (err) {\n      var _err$response2, _err$response3, _err$response3$data;\n      console.error(\"AuthContext login - Error:\", ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n      const errorMessage = ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message || \"Login failed. Please check your credentials.\";\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n\n  // Enhanced register function with proper error handling and return values\n  const register = async (username, email, password) => {\n    try {\n      console.log(\"AuthContext register - Starting registration for:\", username);\n\n      // Normalize inputs\n      const normalizedEmail = email.toLowerCase().trim();\n      const trimmedUsername = username.trim();\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/auth/register`, {\n        username: trimmedUsername,\n        email: normalizedEmail,\n        password\n      });\n      if (response.data.token && response.data.user) {\n        localStorage.setItem(\"token\", response.data.token);\n        setUser(response.data.user);\n        console.log(\"AuthContext register - Success for user:\", response.data.user.username);\n        return {\n          success: true,\n          user: response.data.user\n        };\n      } else {\n        throw new Error(\"Invalid response format from server\");\n      }\n    } catch (err) {\n      var _err$response4, _err$response5, _err$response5$data;\n      console.error(\"AuthContext register - Error:\", ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.data) || err.message);\n      const errorMessage = ((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || err.message || \"Registration failed. Please try again.\";\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n\n  // Logout function - unchanged\n  const logout = () => {\n    console.log(\"AuthContext logout - Logging out user\");\n    localStorage.removeItem(\"token\");\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      setUser,\n      isLoading,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isLoading","setIsLoading","token","localStorage","getItem","get","process","env","REACT_APP_API_URL","headers","Authorization","then","response","data","catch","err","_err$response","console","error","message","removeItem","login","identifier","password","log","normalizedIdentifier","toLowerCase","trim","post","setItem","username","success","Error","_err$response2","_err$response3","_err$response3$data","errorMessage","register","email","normalizedEmail","trimmedUsername","_err$response4","_err$response5","_err$response5$data","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Projects_completed/NexusEd/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// Create the authentication context\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Check for existing token on initial load\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      axios\r\n        .get(`${process.env.REACT_APP_API_URL}/api/auth/me`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setUser(response.data); // Updated to handle flat response\r\n          setIsLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.error(\r\n            \"Error fetching user:\",\r\n            err.response?.data || err.message\r\n          );\r\n          localStorage.removeItem(\"token\");\r\n          setUser(null);\r\n          setIsLoading(false);\r\n        });\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Enhanced login function with proper error handling and return values\r\n  const login = async (identifier, password) => {\r\n    try {\r\n      console.log(\"AuthContext login - Identifier:\", identifier);\r\n\r\n      // Convert identifier to lowercase for case-insensitive login\r\n      const normalizedIdentifier = identifier.toLowerCase().trim();\r\n\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/api/auth/login`,\r\n        { identifier: normalizedIdentifier, password }\r\n      );\r\n\r\n      if (response.data.token && response.data.user) {\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        setUser(response.data.user);\r\n        console.log(\r\n          \"AuthContext login - Success for user:\",\r\n          response.data.user.username\r\n        );\r\n        return { success: true, user: response.data.user };\r\n      } else {\r\n        throw new Error(\"Invalid response format from server\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\r\n        \"AuthContext login - Error:\",\r\n        err.response?.data || err.message\r\n      );\r\n\r\n      const errorMessage =\r\n        err.response?.data?.message ||\r\n        err.message ||\r\n        \"Login failed. Please check your credentials.\";\r\n\r\n      return {\r\n        success: false,\r\n        message: errorMessage,\r\n      };\r\n    }\r\n  };\r\n\r\n  // Enhanced register function with proper error handling and return values\r\n  const register = async (username, email, password) => {\r\n    try {\r\n      console.log(\r\n        \"AuthContext register - Starting registration for:\",\r\n        username\r\n      );\r\n\r\n      // Normalize inputs\r\n      const normalizedEmail = email.toLowerCase().trim();\r\n      const trimmedUsername = username.trim();\r\n\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/api/auth/register`,\r\n        {\r\n          username: trimmedUsername,\r\n          email: normalizedEmail,\r\n          password,\r\n        }\r\n      );\r\n\r\n      if (response.data.token && response.data.user) {\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        setUser(response.data.user);\r\n        console.log(\r\n          \"AuthContext register - Success for user:\",\r\n          response.data.user.username\r\n        );\r\n        return { success: true, user: response.data.user };\r\n      } else {\r\n        throw new Error(\"Invalid response format from server\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\r\n        \"AuthContext register - Error:\",\r\n        err.response?.data || err.message\r\n      );\r\n\r\n      const errorMessage =\r\n        err.response?.data?.message ||\r\n        err.message ||\r\n        \"Registration failed. Please try again.\";\r\n\r\n      return {\r\n        success: false,\r\n        message: errorMessage,\r\n      };\r\n    }\r\n  };\r\n\r\n  // Logout function - unchanged\r\n  const logout = () => {\r\n    console.log(\"AuthContext logout - Logging out user\");\r\n    localStorage.removeItem(\"token\");\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        setUser,\r\n        isLoading,\r\n        login,\r\n        register,\r\n        logout,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}