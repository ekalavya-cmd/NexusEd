{"ast":null,"code":"var _jsxFileName = \"D:\\\\nexused\\\\frontend\\\\src\\\\components\\\\PostCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostCard({\n  title,\n  content,\n  author,\n  id,\n  setPosts,\n  currentUser,\n  comments,\n  likes,\n  post\n}) {\n  _s();\n  var _post$author5, _post$author5$_id;\n  const [commentContent, setCommentContent] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const timeoutRef = useRef(null);\n\n  // Clear previous timeout when setting a new error\n  const setTemporaryError = message => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setError(message);\n    timeoutRef.current = setTimeout(() => {\n      setError(\"\");\n      timeoutRef.current = null;\n    }, 3000);\n  };\n\n  // Cleanup timeout on component unmount\n  useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n  const handleDeletePost = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      console.log(\"Delete post - Token:\", token ? \"Present\" : \"Missing\");\n      console.log(\"Delete post - Post ID:\", id);\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/posts/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"Failed to delete post\");\n      }\n      setPosts(prevPosts => prevPosts.filter(post => post._id !== id));\n      setError(\"\");\n    } catch (err) {\n      console.error(\"Error deleting post:\", err);\n      setTemporaryError(err.message || \"Failed to delete post\");\n    }\n  };\n  const handleDeleteComment = async commentId => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      console.log(\"Delete comment - Token:\", token ? \"Present\" : \"Missing\");\n      console.log(\"Delete comment - Comment ID:\", commentId);\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/posts/${id}/comments/${commentId}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"Failed to delete comment\");\n      }\n      const updatedPost = await response.json();\n      console.log(\"Delete comment - Response:\", JSON.stringify(updatedPost, null, 2));\n      setPosts(prevPosts => prevPosts.map(post => {\n        var _updatedPost$author, _post$author;\n        return post._id === id ? {\n          ...updatedPost,\n          author: (_updatedPost$author = updatedPost.author) !== null && _updatedPost$author !== void 0 && _updatedPost$author.username ? updatedPost.author : {\n            username: author,\n            _id: (_post$author = post.author) === null || _post$author === void 0 ? void 0 : _post$author._id\n          }\n        } : post;\n      }));\n      setError(\"\");\n    } catch (err) {\n      console.error(\"Error deleting comment:\", err);\n      setTemporaryError(err.message || \"Failed to delete comment\");\n    }\n  };\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    if (!commentContent.trim()) {\n      setTemporaryError(\"Comment cannot be empty\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      console.log(\"Comment submit - Token:\", token ? \"Present\" : \"Missing\");\n      console.log(\"Comment submit - Post ID:\", id);\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/posts/${id}/comments`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          content: commentContent\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"Failed to add comment\");\n      }\n      const updatedPost = await response.json();\n      console.log(\"Comment submit - Response:\", JSON.stringify(updatedPost, null, 2));\n      setPosts(prevPosts => prevPosts.map(post => {\n        var _updatedPost$author2, _post$author2;\n        return post._id === id ? {\n          ...updatedPost,\n          author: (_updatedPost$author2 = updatedPost.author) !== null && _updatedPost$author2 !== void 0 && _updatedPost$author2.username ? updatedPost.author : {\n            username: author,\n            _id: (_post$author2 = post.author) === null || _post$author2 === void 0 ? void 0 : _post$author2._id\n          }\n        } : post;\n      }));\n      setCommentContent(\"\");\n      setError(\"\");\n    } catch (err) {\n      console.error(\"Error adding comment:\", err);\n      setTemporaryError(err.message || \"Failed to add comment\");\n    }\n  };\n  const handleLikePost = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      console.log(\"Like post - Token:\", token ? \"Present\" : \"Missing\");\n      console.log(\"Like post - Post ID:\", id);\n      console.log(\"Like post - Current User:\", currentUser);\n      if (!token || !currentUser) {\n        throw new Error(\"User must be logged in to like a post\");\n      }\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/posts/${id}/like`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Like post - Response Status:\", response.status);\n      console.log(\"Like post - Response Headers:\", Object.fromEntries(response.headers));\n      let errorData;\n      if (!response.ok) {\n        var _errorData;\n        try {\n          errorData = await response.json();\n          console.log(\"Like post - Error Response:\", JSON.stringify(errorData, null, 2));\n        } catch (parseErr) {\n          console.error(\"Like post - Failed to parse error response:\", parseErr);\n        }\n        throw new Error(((_errorData = errorData) === null || _errorData === void 0 ? void 0 : _errorData.message) || `Failed to like post (HTTP ${response.status})`);\n      }\n      const updatedPost = await response.json();\n      console.log(\"Like post - Response:\", JSON.stringify(updatedPost, null, 2));\n      console.log(\"Like post - Author:\", updatedPost.author);\n      console.log(\"Like post - Comments:\", updatedPost.comments);\n      if (!updatedPost._id) {\n        throw new Error(\"Invalid response: Missing _id\");\n      }\n      setPosts(prevPosts => {\n        const newPosts = prevPosts.map(post => {\n          if (post._id === id) {\n            var _updatedPost$author3, _post$author3;\n            const newAuthor = typeof updatedPost.author === \"object\" && (_updatedPost$author3 = updatedPost.author) !== null && _updatedPost$author3 !== void 0 && _updatedPost$author3.username ? updatedPost.author : {\n              username: author,\n              _id: typeof updatedPost.author === \"string\" ? updatedPost.author : (_post$author3 = post.author) === null || _post$author3 === void 0 ? void 0 : _post$author3._id\n            };\n            const updated = {\n              ...updatedPost,\n              author: newAuthor,\n              comments: Array.isArray(updatedPost.comments) ? updatedPost.comments : post.comments || [],\n              likes: Array.isArray(updatedPost.likes) ? updatedPost.likes : post.likes || []\n            };\n            console.log(\"Like post - Updated post:\", JSON.stringify(updated, null, 2));\n            return updated;\n          }\n          return post;\n        });\n        console.log(\"Like post - Updated posts:\", JSON.stringify(newPosts, null, 2));\n        return newPosts;\n      });\n      setError(\"\");\n    } catch (err) {\n      var _err$response;\n      console.error(\"Error liking post:\", {\n        message: err.message,\n        stack: err.stack,\n        response: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message\n      });\n      setTemporaryError(err.message || \"Failed to like post\");\n    }\n  };\n  const handleLikeComment = async commentId => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      console.log(\"Like comment - Token:\", token ? \"Present\" : \"Missing\");\n      console.log(\"Like comment - Comment ID:\", commentId);\n      if (!token || !currentUser) {\n        throw new Error(\"User must be logged in to like a comment\");\n      }\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/posts/${id}/comments/${commentId}/like`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Like comment - Response Status:\", response.status);\n      console.log(\"Like comment - Response Headers:\", Object.fromEntries(response.headers));\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || `Failed to like comment (HTTP ${response.status})`);\n      }\n      const updatedPost = await response.json();\n      console.log(\"Like comment - Response:\", JSON.stringify(updatedPost, null, 2));\n      setPosts(prevPosts => prevPosts.map(post => {\n        var _updatedPost$author4, _post$author4;\n        return post._id === id ? {\n          ...updatedPost,\n          author: typeof updatedPost.author === \"object\" && (_updatedPost$author4 = updatedPost.author) !== null && _updatedPost$author4 !== void 0 && _updatedPost$author4.username ? updatedPost.author : {\n            username: author,\n            _id: typeof updatedPost.author === \"string\" ? updatedPost.author : (_post$author4 = post.author) === null || _post$author4 === void 0 ? void 0 : _post$author4._id\n          }\n        } : post;\n      }));\n      setError(\"\");\n    } catch (err) {\n      var _err$response2;\n      console.error(\"Error liking comment:\", {\n        message: err.message,\n        stack: err.stack,\n        response: (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data\n      });\n      setTemporaryError(err.message || \"Failed to like comment\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-lg shadow-md mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold text-gray-800\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600 mt-2\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500 text-sm mt-2\",\n      children: [\"Posted by \", author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 flex items-center space-x-4\",\n      children: [currentUser && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLikePost,\n        className: \"bg-blue-600 text-white px-3 py-1 rounded-md hover:bg-blue-700 disabled:opacity-50 text-sm\",\n        disabled: !currentUser,\n        children: [likes && currentUser && likes.includes(currentUser.id.toString()) ? \"Unlike\" : \"Like\", \" \", \"(\", likes ? likes.length : 0, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }, this), currentUser && ((_post$author5 = post.author) === null || _post$author5 === void 0 ? void 0 : (_post$author5$_id = _post$author5._id) === null || _post$author5$_id === void 0 ? void 0 : _post$author5$_id.toString()) === currentUser.id && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeletePost,\n        className: \"bg-red-600 text-white px-3 py-1 rounded-md hover:bg-red-700 text-sm\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 text-red-700 p-2 mt-2 rounded-md\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-lg font-semibold text-gray-800\",\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), comments && comments.length > 0 ? comments.map(comment => {\n        var _comment$author, _comment$author2, _comment$author2$_id;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-100 p-2 mt-2 rounded-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 text-sm\",\n            children: [\"By \", ((_comment$author = comment.author) === null || _comment$author === void 0 ? void 0 : _comment$author.username) || \"Unknown\", \" on\", \" \", new Date(comment.createdAt).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4 mt-1\",\n            children: [currentUser && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleLikeComment(comment._id),\n              className: \"bg-blue-600 text-white px-3 py-1 rounded-md hover:bg-blue-700 disabled:opacity-50 text-sm\",\n              disabled: !currentUser,\n              children: [comment.likes && currentUser && comment.likes.includes(currentUser.id.toString()) ? \"Unlike\" : \"Like\", \" \", \"(\", comment.likes ? comment.likes.length : 0, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 19\n            }, this), currentUser && ((_comment$author2 = comment.author) === null || _comment$author2 === void 0 ? void 0 : (_comment$author2$_id = _comment$author2._id) === null || _comment$author2$_id === void 0 ? void 0 : _comment$author2$_id.toString()) === currentUser.id && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteComment(comment._id),\n              className: \"bg-red-600 text-white px-3 py-1 rounded-md hover:bg-red-700 text-sm\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this)]\n        }, comment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 text-sm\",\n        children: \"No comments yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this), currentUser && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCommentSubmit,\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: commentContent,\n          onChange: e => setCommentContent(e.target.value),\n          placeholder: \"Add a comment\",\n          className: \"w-full p-2 mb-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-600\",\n          rows: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\",\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 5\n  }, this);\n}\n_s(PostCard, \"bov9q2WOuh8thsemQBRaMK9yO7c=\");\n_c = PostCard;\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","PostCard","title","content","author","id","setPosts","currentUser","comments","likes","post","_s","_post$author5","_post$author5$_id","commentContent","setCommentContent","error","setError","timeoutRef","setTemporaryError","message","current","clearTimeout","setTimeout","handleDeletePost","token","localStorage","getItem","console","log","response","fetch","process","env","REACT_APP_API_URL","method","headers","Authorization","ok","errorData","json","Error","prevPosts","filter","_id","err","handleDeleteComment","commentId","updatedPost","JSON","stringify","map","_updatedPost$author","_post$author","username","handleCommentSubmit","e","preventDefault","trim","body","_updatedPost$author2","_post$author2","handleLikePost","status","Object","fromEntries","_errorData","parseErr","newPosts","_updatedPost$author3","_post$author3","newAuthor","updated","Array","isArray","_err$response","stack","data","handleLikeComment","_updatedPost$author4","_post$author4","_err$response2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","includes","toString","length","comment","_comment$author","_comment$author2","_comment$author2$_id","Date","createdAt","toLocaleDateString","onSubmit","value","onChange","target","placeholder","rows","type","_c","$RefreshReg$"],"sources":["D:/nexused/frontend/src/components/PostCard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction PostCard({\r\n  title,\r\n  content,\r\n  author,\r\n  id,\r\n  setPosts,\r\n  currentUser,\r\n  comments,\r\n  likes,\r\n  post,\r\n}) {\r\n  const [commentContent, setCommentContent] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const timeoutRef = useRef(null);\r\n\r\n  // Clear previous timeout when setting a new error\r\n  const setTemporaryError = (message) => {\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current);\r\n    }\r\n    setError(message);\r\n    timeoutRef.current = setTimeout(() => {\r\n      setError(\"\");\r\n      timeoutRef.current = null;\r\n    }, 3000);\r\n  };\r\n\r\n  // Cleanup timeout on component unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (timeoutRef.current) {\r\n        clearTimeout(timeoutRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleDeletePost = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      console.log(\"Delete post - Token:\", token ? \"Present\" : \"Missing\");\r\n      console.log(\"Delete post - Post ID:\", id);\r\n\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/api/posts/${id}`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || \"Failed to delete post\");\r\n      }\r\n      setPosts((prevPosts) => prevPosts.filter((post) => post._id !== id));\r\n      setError(\"\");\r\n    } catch (err) {\r\n      console.error(\"Error deleting post:\", err);\r\n      setTemporaryError(err.message || \"Failed to delete post\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteComment = async (commentId) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      console.log(\"Delete comment - Token:\", token ? \"Present\" : \"Missing\");\r\n      console.log(\"Delete comment - Comment ID:\", commentId);\r\n\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/api/posts/${id}/comments/${commentId}`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || \"Failed to delete comment\");\r\n      }\r\n      const updatedPost = await response.json();\r\n      console.log(\r\n        \"Delete comment - Response:\",\r\n        JSON.stringify(updatedPost, null, 2)\r\n      );\r\n      setPosts((prevPosts) =>\r\n        prevPosts.map((post) =>\r\n          post._id === id\r\n            ? {\r\n                ...updatedPost,\r\n                author: updatedPost.author?.username\r\n                  ? updatedPost.author\r\n                  : { username: author, _id: post.author?._id },\r\n              }\r\n            : post\r\n        )\r\n      );\r\n      setError(\"\");\r\n    } catch (err) {\r\n      console.error(\"Error deleting comment:\", err);\r\n      setTemporaryError(err.message || \"Failed to delete comment\");\r\n    }\r\n  };\r\n\r\n  const handleCommentSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    if (!commentContent.trim()) {\r\n      setTemporaryError(\"Comment cannot be empty\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      console.log(\"Comment submit - Token:\", token ? \"Present\" : \"Missing\");\r\n      console.log(\"Comment submit - Post ID:\", id);\r\n\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/api/posts/${id}/comments`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify({ content: commentContent }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || \"Failed to add comment\");\r\n      }\r\n\r\n      const updatedPost = await response.json();\r\n      console.log(\r\n        \"Comment submit - Response:\",\r\n        JSON.stringify(updatedPost, null, 2)\r\n      );\r\n      setPosts((prevPosts) =>\r\n        prevPosts.map((post) =>\r\n          post._id === id\r\n            ? {\r\n                ...updatedPost,\r\n                author: updatedPost.author?.username\r\n                  ? updatedPost.author\r\n                  : { username: author, _id: post.author?._id },\r\n              }\r\n            : post\r\n        )\r\n      );\r\n      setCommentContent(\"\");\r\n      setError(\"\");\r\n    } catch (err) {\r\n      console.error(\"Error adding comment:\", err);\r\n      setTemporaryError(err.message || \"Failed to add comment\");\r\n    }\r\n  };\r\n\r\n  const handleLikePost = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      console.log(\"Like post - Token:\", token ? \"Present\" : \"Missing\");\r\n      console.log(\"Like post - Post ID:\", id);\r\n      console.log(\"Like post - Current User:\", currentUser);\r\n\r\n      if (!token || !currentUser) {\r\n        throw new Error(\"User must be logged in to like a post\");\r\n      }\r\n\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/api/posts/${id}/like`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log(\"Like post - Response Status:\", response.status);\r\n      console.log(\r\n        \"Like post - Response Headers:\",\r\n        Object.fromEntries(response.headers)\r\n      );\r\n\r\n      let errorData;\r\n      if (!response.ok) {\r\n        try {\r\n          errorData = await response.json();\r\n          console.log(\r\n            \"Like post - Error Response:\",\r\n            JSON.stringify(errorData, null, 2)\r\n          );\r\n        } catch (parseErr) {\r\n          console.error(\r\n            \"Like post - Failed to parse error response:\",\r\n            parseErr\r\n          );\r\n        }\r\n        throw new Error(\r\n          errorData?.message || `Failed to like post (HTTP ${response.status})`\r\n        );\r\n      }\r\n\r\n      const updatedPost = await response.json();\r\n      console.log(\r\n        \"Like post - Response:\",\r\n        JSON.stringify(updatedPost, null, 2)\r\n      );\r\n      console.log(\"Like post - Author:\", updatedPost.author);\r\n      console.log(\"Like post - Comments:\", updatedPost.comments);\r\n\r\n      if (!updatedPost._id) {\r\n        throw new Error(\"Invalid response: Missing _id\");\r\n      }\r\n\r\n      setPosts((prevPosts) => {\r\n        const newPosts = prevPosts.map((post) => {\r\n          if (post._id === id) {\r\n            const newAuthor =\r\n              typeof updatedPost.author === \"object\" &&\r\n              updatedPost.author?.username\r\n                ? updatedPost.author\r\n                : {\r\n                    username: author,\r\n                    _id:\r\n                      typeof updatedPost.author === \"string\"\r\n                        ? updatedPost.author\r\n                        : post.author?._id,\r\n                  };\r\n            const updated = {\r\n              ...updatedPost,\r\n              author: newAuthor,\r\n              comments: Array.isArray(updatedPost.comments)\r\n                ? updatedPost.comments\r\n                : post.comments || [],\r\n              likes: Array.isArray(updatedPost.likes)\r\n                ? updatedPost.likes\r\n                : post.likes || [],\r\n            };\r\n            console.log(\r\n              \"Like post - Updated post:\",\r\n              JSON.stringify(updated, null, 2)\r\n            );\r\n            return updated;\r\n          }\r\n          return post;\r\n        });\r\n        console.log(\r\n          \"Like post - Updated posts:\",\r\n          JSON.stringify(newPosts, null, 2)\r\n        );\r\n        return newPosts;\r\n      });\r\n      setError(\"\");\r\n    } catch (err) {\r\n      console.error(\"Error liking post:\", {\r\n        message: err.message,\r\n        stack: err.stack,\r\n        response: err.response?.data || err.message,\r\n      });\r\n      setTemporaryError(err.message || \"Failed to like post\");\r\n    }\r\n  };\r\n\r\n  const handleLikeComment = async (commentId) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      console.log(\"Like comment - Token:\", token ? \"Present\" : \"Missing\");\r\n      console.log(\"Like comment - Comment ID:\", commentId);\r\n\r\n      if (!token || !currentUser) {\r\n        throw new Error(\"User must be logged in to like a comment\");\r\n      }\r\n\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/api/posts/${id}/comments/${commentId}/like`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log(\"Like comment - Response Status:\", response.status);\r\n      console.log(\r\n        \"Like comment - Response Headers:\",\r\n        Object.fromEntries(response.headers)\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(\r\n          errorData.message ||\r\n            `Failed to like comment (HTTP ${response.status})`\r\n        );\r\n      }\r\n\r\n      const updatedPost = await response.json();\r\n      console.log(\r\n        \"Like comment - Response:\",\r\n        JSON.stringify(updatedPost, null, 2)\r\n      );\r\n      setPosts((prevPosts) =>\r\n        prevPosts.map((post) =>\r\n          post._id === id\r\n            ? {\r\n                ...updatedPost,\r\n                author:\r\n                  typeof updatedPost.author === \"object\" &&\r\n                  updatedPost.author?.username\r\n                    ? updatedPost.author\r\n                    : {\r\n                        username: author,\r\n                        _id:\r\n                          typeof updatedPost.author === \"string\"\r\n                            ? updatedPost.author\r\n                            : post.author?._id,\r\n                      },\r\n              }\r\n            : post\r\n        )\r\n      );\r\n      setError(\"\");\r\n    } catch (err) {\r\n      console.error(\"Error liking comment:\", {\r\n        message: err.message,\r\n        stack: err.stack,\r\n        response: err.response?.data,\r\n      });\r\n      setTemporaryError(err.message || \"Failed to like comment\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-lg shadow-md mb-4\">\r\n      <h2 className=\"text-xl font-semibold text-gray-800\">{title}</h2>\r\n      <p className=\"text-gray-600 mt-2\">{content}</p>\r\n      <p className=\"text-gray-500 text-sm mt-2\">Posted by {author}</p>\r\n      <div className=\"mt-2 flex items-center space-x-4\">\r\n        {currentUser && (\r\n          <button\r\n            onClick={handleLikePost}\r\n            className=\"bg-blue-600 text-white px-3 py-1 rounded-md hover:bg-blue-700 disabled:opacity-50 text-sm\"\r\n            disabled={!currentUser}\r\n          >\r\n            {likes && currentUser && likes.includes(currentUser.id.toString())\r\n              ? \"Unlike\"\r\n              : \"Like\"}{\" \"}\r\n            ({likes ? likes.length : 0})\r\n          </button>\r\n        )}\r\n        {currentUser && post.author?._id?.toString() === currentUser.id && (\r\n          <button\r\n            onClick={handleDeletePost}\r\n            className=\"bg-red-600 text-white px-3 py-1 rounded-md hover:bg-red-700 text-sm\"\r\n          >\r\n            Delete\r\n          </button>\r\n        )}\r\n      </div>\r\n      {error && (\r\n        <div className=\"bg-red-100 text-red-700 p-2 mt-2 rounded-md\">\r\n          {error}\r\n        </div>\r\n      )}\r\n      <div className=\"mt-4\">\r\n        <h4 className=\"text-lg font-semibold text-gray-800\">Comments</h4>\r\n        {comments && comments.length > 0 ? (\r\n          comments.map((comment) => (\r\n            <div key={comment._id} className=\"bg-gray-100 p-2 mt-2 rounded-md\">\r\n              <p className=\"text-gray-600\">{comment.content}</p>\r\n              <p className=\"text-gray-500 text-sm\">\r\n                By {comment.author?.username || \"Unknown\"} on{\" \"}\r\n                {new Date(comment.createdAt).toLocaleDateString()}\r\n              </p>\r\n              <div className=\"flex items-center space-x-4 mt-1\">\r\n                {currentUser && (\r\n                  <button\r\n                    onClick={() => handleLikeComment(comment._id)}\r\n                    className=\"bg-blue-600 text-white px-3 py-1 rounded-md hover:bg-blue-700 disabled:opacity-50 text-sm\"\r\n                    disabled={!currentUser}\r\n                  >\r\n                    {comment.likes &&\r\n                    currentUser &&\r\n                    comment.likes.includes(currentUser.id.toString())\r\n                      ? \"Unlike\"\r\n                      : \"Like\"}{\" \"}\r\n                    ({comment.likes ? comment.likes.length : 0})\r\n                  </button>\r\n                )}\r\n                {currentUser &&\r\n                  comment.author?._id?.toString() === currentUser.id && (\r\n                    <button\r\n                      onClick={() => handleDeleteComment(comment._id)}\r\n                      className=\"bg-red-600 text-white px-3 py-1 rounded-md hover:bg-red-700 text-sm\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  )}\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p className=\"text-gray-600 text-sm\">No comments yet.</p>\r\n        )}\r\n        {currentUser && (\r\n          <form onSubmit={handleCommentSubmit} className=\"mt-4\">\r\n            <textarea\r\n              value={commentContent}\r\n              onChange={(e) => setCommentContent(e.target.value)}\r\n              placeholder=\"Add a comment\"\r\n              className=\"w-full p-2 mb-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-600\"\r\n              rows=\"2\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\r\n            >\r\n              Comment\r\n            </button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}